knitr::opts_chunk$set(warning = FALSE)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
str(kirc)
colnames(kirc)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
str(kirc)
colnames(kirc)
row.names(kirc)
colnames(kirc)
row.names(kirc)
colnames(kirc)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
str(kirc)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
knitr::opts_chunk$set(echo = TRUE)
sample(c(1, 2, 3, 23, 5), 2, replace = F)
sample(1:50, 100, replace = T)
barplot(sample(1:50,100,replace=T))
barplot(sample(1:50,100,replace=T), main = "Graph Title", xlab = "x-label", ylab = "y-label")
points = sample(c(1,2,3,23,5), 4, replace = T)
barplot(points, main="Hogwards house points", xlab="Houses", ylab="Points", names.arg = c("Slytherine", "Gryffindor", "Ravenclaw", "Hufflepuff"), col=c("green", "red", "blue", "yellow"), legend.text=c("Slyth", "Gryff", "Raven", "Huffle"))
par = mfrow(c(2,1))
par mfrow(c(2,1))
par(mfrow(c(2,1)))
par(mfrow(c(2,1))
barplot(sample(1:25, 4, replace=T), main = "game 1", col = c("green", 'red', "blue"))
par(mfrow = (c(2,1)))
barplot(sample(1:25, 4, replace=T), main = "game 1", col = c("green", 'red', "blue"))
barplot(sample(1:25, 4, replace=T), main = "game 2", col = c("gold", 'magenta', "black"))
par(mfrow = (c(2,1)))
barplot(sample(1:25, 4, replace=T), main = "game 1", col = c("green", 'red', "blue"))
par(mfrow = (c(2,1)))
barplot(sample(1:25, 4, replace=T), main = "game 1", col = c("green", 'red', "blue"))
barplot(sample(1:25, 4, replace=T), main = "game 2", col = c("gold", 'magenta', "black"))
?barplot
length(grep("Control", colnames(kirc)))
length(grep("Tumor", colnames(kirc)))
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
?par
?par(mfrow())
?barplot
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"))
par(mfrow=c(1,1))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"))
par(mfrow=c(1,1))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"))
par(mfrow=c(1,2))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"))
par(mfrow=c(1,1))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"), ylim = c(0,30))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"), ylim = c(0,30))
par(mfrow=c(1,1))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"), ylim = c(0,30))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"), ylim = c(0,30))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("darkgreen", 'red', "blue", "yellow"), ylim = c(0,30))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("green", 'red', "blue", "yellow"), ylim = c(0,30))
par(mfrow=c(1,2))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("darkgreen", 'firebrick', "deepskyblue", "gold"), ylim = c(0,30))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("Team 1", "Team 2", "Team 3", "Team 4"), col = c("darkgreen", 'firebrick', "deepskyblue", "gold"), ylim = c(0,30))
par(mfrow=c(1,2))
barplot(sample(1:30, 4, replace=T), main = "Game 1", xlab = "Teams", ylab = "Scores", names.arg = c("T1", "T2", "T3", "T4"), col = c("darkgreen", 'firebrick', "deepskyblue", "gold"), ylim = c(0,30))
barplot(sample(1:30, 4, replace=T), main = "Game 2", xlab = "Teams", ylab = "Scores", names.arg = c("T1", "T2", "T3", "T4"), col = c("darkgreen", 'firebrick', "deepskyblue", "gold"), ylim = c(0,30))
boxplot(smalldata[, c(1:3, 11:13)], main = "Boxplot of  3 sample")
log.smalldata = log2(smalldata + 1)
boxplot(log.smalldata[,c(1:3, 11:13)], main = "Boxplot of 3 Tumors, 3 Controls", xlab = "Sample", ylab = "Expression")
boxplot(kirc[, c(1:10, 51:61)], main = "Boxplot of first 10 tumor and first 10 control")
boxplot(kirc[, c(1:10, 50:60)], main = "Boxplot of first 10 tumor and first 10 control")
log.kirc = log2(kirc+1)
boxplot(log.kirc[, c(1:10, 50:60)], main = "Log2 boxplot of first 10 tumor and first 10 control")
log.kirc = log2(kirc+1)
boxplot(log.kirc[, c(1:10, 50:60)], main = "Log2 boxplot of first 10 tumor and first 10 control", xlab = "Sample", ylab = "Expression")
plot(1:5, 10:14)
plot(sample(1:100,50,replace=F), sample(30:400,50,replace=T))
?c
plot(sample(1:100,50,replace=F), sample(30:400,50,replace=T), xlim(c(0,400)), ylim(c(0,50)))
plot(sample(1:100,50,replace=F), sample(30:400,50,replace=T), xlim = (c(0,400)), ylim = (c(0,50)))
?plot
head(smalldata)
?as.matrix
mirh = grep("miR_h", colnames(smalldata))
mirh = grep("miR_h", colnames(smalldata))
head(mirh)
mirh = smalldata[,grep("miR_h", colnames(smalldata))]
head(mirh)
mirh = smalldata[,grep("miR_h", colnames(smalldata))]
mirh
mirh = smalldata[grep("miR_h", colnames(smalldata)),]
mirh
matrix = as.matrix(smalldata)
matrix = as.matrix(smalldata)
matrix
matrix = as.matrix(smalldata)
matrix
x<-c(5.1, 4.9, 4.7, 4.6, 5.0, 5.4)
y<-c(3.5, 3.0, 3.2, 3.1, 3.6, 3.9)
plot(x,y, xlab="X", ylab="Y", main="Correlation between X and Y")
cor(x,y)
plot(smalldata["miR_a",], smalldata["miR_c"],)
plot(smalldata["miR_a",], smalldata["miR_c",])
mira = smalldata["miR_a",]
mirc = smalldata["miR_c",]
mirk = smalldata["miR_k"]
mira = smalldata["miR_a",]
mirc = smalldata["miR_c",]
mirk = smalldata["miR_k",]
plot(smalldata["miR_a",], smalldata["miR_c",])
cor(mira, mirc)
cora(mira, mirk)
mira = smalldata["miR_a",]
mirc = smalldata["miR_c",]
mirk = smalldata["miR_k",]
plot(smalldata["miR_a",], smalldata["miR_c",])
cor(mira, mirc)
cor(mira, mirk)
mira = smalldata["miR_a",]
mirc = smalldata["miR_c",]
mirk = smalldata["miR_k",]
plot(mira, mirc)
plot(mira, mirk)
cor(mira, mirc)
cor(mira, mirk)
mira = as.vector(smalldata["miR_a",])
mirc = as.vector(smalldata["miR_c",])
mirk = as.vector(smalldata["miR_k",])
plot(mira, mirc)
plot(mira, mirk)
cor(mira, mirc)
mira = as.vector(smalldata["miR_a",])
mirc = as.vector(smalldata["miR_c",])
mirk = as.vector(smalldata["miR_k",])
plot(mira, mirc)
plot(mira, mirk)
mira = as.vector(smalldata["miR_a",])
mirc = as.vector(smalldata["miR_c",])
mirk = as.vector(smalldata["miR_k",])
plot(mira, mirc)
plot(mira, mirk)
cor(mira, mirc)
?as.vector
mira = as.vector(smalldata["miR_a",])
mirc = as.vector(smalldata["miR_c",])
mirk = as.vector(smalldata["miR_k",])
plot(mira, mirc)
plot(mira, mirk)
cor(mira, mirc)
mira = as.numeric(smalldata["miR_a",])
mirc = as.numeric(smalldata["miR_c",])
mirk = as.numeric(smalldata["miR_k",])
plot(mira, mirc)
plot(mira, mirk)
cor(mira, mirc)
cor(mira, mirk)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
miRtargets = read.table("miR_targets.txt", header = T, stringsAsFactors = F, row.names = 1)
order(kircttest$pvalue)
kircttest = data.frame()
for(i in 1:nrow(kirc)) {
kircTumor = kircmatrix[i, tumor_cols]
kircControl = kircmatrix[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
length(grep("Control", colnames(kirc)))
length(grep("Tumor", colnames(kirc)))
boxplot(kirc[, c(1:10, 50:60)], main = "Boxplot of first 10 tumor and first 10 control")
log.kirc = log2(kirc+1)
boxplot(log.kirc[, c(1:10, 50:60)], main = "Log2 boxplot of first 10 tumor and first 10 control", xlab = "Sample", ylab = "Expression")
kircmatrix = as.matrix(kirc)
head(kircmatrix)
nKIRC <- data.frame()
control_cols <- grep("Control", colnames(kirc))
tumor_cols <- grep("Tumor", colnames(kirc))
for (i in 1:nrow(kirc)) {
if (sum(kirc[i, control_cols]) != 0 && sum(kirc[i, tumor_cols]) != 0) {
nKIRC <- rbind(nKIRC, kirc[i, ])
}
}
nKIRC
kircttest = data.frame()
for(i in 1:nrow(kirc)) {
kircTumor = kircmatrix[i, tumor_cols]
kircControl = kircmatrix[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
kircttest
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
pheatmap(sig_50)
knitr::opts_chunk$set(echo = TRUE)
dir()
smalldata = read.table("small_data.txt", header=T, row.names=1, stringsAsFactors=F)
str(smalldata)
install.packages("pheatmap")
library("pheatmap")
?pheatmap
options(scipen = 10)
smalldata_heatmap = pheatmap(smalldata)
smalldata_heatmap <- log(smalldata +1)
pheatmap(smalldata_heatmap)
pheatmap(smalldata_heatmap,scale = 'row')
pheatmap(smalldata_heatmap, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=25, cellheight=10, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data", file="Heatmap_Sample_Data.pdf", width=10, height=10)
dir(pattern=".pdf")
pheatmap(smalldata_heatmap, cluster_cols=F, scale="row", clustering_distance_rows="correlation", cellwidth=20, cellheight=10, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data")
smalldataM = as.matrix(smalldata)
miR_a <- smalldataM["miR_a",]
miR_c <- smalldataM["miR_c",]
plot(miR_a,miR_c)
cor(miR_a,miR_c)
miR_k <- smalldataM["miR_k",]
plot(miR_a , miR_k)
cor(miR_a , miR_k)
m_smalldata_heatmap=smalldata_heatmap[c("miR_a", "miR_c", "miR_k"),]
pheatmap(m_smalldata_heatmap, scale="row")
Group <- as.factor(substr(colnames(smalldata),1,1))
Ann <- cbind.data.frame(Group)
row.names(Ann) <- colnames(smalldata)
Ann
pheatmap(smalldata_heatmap, scale="row",cellwidth=16, cellheight=8, color=colorRampPalette(c("darkblue","white","red2"))(256), border_color = NA,
annotation_col = Ann,
main="Heatmap of Sample Data")
pheatmap(sig_50)
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
kircttest = data.frame()
for(i in 1:nrow(kirc)) {
kircTumor = kircmatrix[i, tumor_cols]
kircControl = kircmatrix[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
rownames(kircttest) = rownames(kircmatrix)
kircttest
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=25, cellheight=10, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data", file="Heatmap_Sample_Data.pdf", width=10, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=25, cellheight=10, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data", file="Heatmap_Sample_Data.pdf", width=10, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=25, cellheight=10, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data",  width=10, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=3, cellheight=3, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data", width=10, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=5, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data", width=10, height=10)
miRtargets = read.table("miR_targets.txt", header = T, stringsAsFactors = F, row.names = 1)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data", width=10, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=10, cellheight=10, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data", width=10, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", width=10, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", width=25, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_cols="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "Sig_50.pdf" , width=25, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_rows="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "Sig_50.pdf" , width=25, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", clustering_distance_rows="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "Sig_50.pdf" , width=25, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "Sig_50.pdf" , width=25, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "Sig_50.pdf" , width=25, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs",  width=25, height=10)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs",  width=25, height=20)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=10, cellheight=7, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs",  width=25, height=20)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=10, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs",  width=25, height=20)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs",  width=25, height=20)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig_50.pdf", width=25, height=20)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig_50.pdf", width=25, height=20)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig_50.pdf", width=25, height=20)
pheatmap(sig_50, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
knitr::opts_chunk$set(echo = TRUE)
pheatmap(smalldata_heatmap, cluster_cols=F, scale="row", clustering_distance_rows="correlation", cellwidth=20, cellheight=10, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of Sample Data")
install.packages("pheatmap")
library("pheatmap")
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
kircttest = data.frame()
for(i in 1:nrow(kirc)) {
kircTumor = nKIRC[i, tumor_cols]
kircControl = nKIRC[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
kircttest = data.frame()
for(i in 1:nrow(nKIRC)) {
kircTumor = nKIRC[i, tumor_cols]
kircControl = nKIRC[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
rownames(kircttest) = rownames(nKIRC)
kircttest
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
library(pheatmap)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
kircttest = data.frame()
for(i in 1:nrow(kirc)) {
kircTumor = kircmatrix[i, tumor_cols]
kircControl = kircmatrix[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
rownames(kircttest) = rownames(kircmatrix)
kircttest
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
library(pheatmap)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
kirc = read.table("KIRC.txt", header = T, stringsAsFactors = F, row.names=1)
dim(kirc)
head(kirc)
length(grep("Control", colnames(kirc)))
length(grep("Tumor", colnames(kirc)))
boxplot(kirc[, c(1:10, 50:60)], main = "Boxplot of first 10 tumor and first 10 control")
log.kirc = log2(kirc+1)
boxplot(log.kirc[, c(1:10, 50:60)], main = "Log2 boxplot of first 10 tumor and first 10 control", xlab = "Sample", ylab = "Expression")
kircmatrix = as.matrix(kirc)
head(kircmatrix)
nKIRC <- data.frame()
control_cols <- grep("Control", colnames(kirc))
tumor_cols <- grep("Tumor", colnames(kirc))
for (i in 1:nrow(kirc)) {
if (sum(kirc[i, control_cols]) != 0 && sum(kirc[i, tumor_cols]) != 0) {
nKIRC <- rbind(nKIRC, kirc[i, ])
}
}
nKIRC
kircttest = data.frame()
for(i in 1:nrow(kirc)) {
kircTumor = kircmatrix[i, tumor_cols]
kircControl = kircmatrix[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
rownames(kircttest) = rownames(kircmatrix)
kircttest
order(kircttest$pvalue)
statTableOrder <- kircttest[order(kircttest$pvalue), ]
sig_50 <- statTableOrder[1:50, ]
head(sig_50)
library(pheatmap)
pheatmap(statTableOrder, scale="row", clustering_distance_rows="correlation", cellwidth=15, cellheight=5, color=colorRampPalette(c("darkblue", "white", "red2"))(256), border_color=NA, main= "Heatmap of 50 Most Significant miRNAs", file = "sig50.pdf", width=25, height=20)
logKIRC = log2(as.matrix(KIRC)+1)
logKIRC = log2(as.matrix(KIRC)+1)
logKIRC = log2(kircmatrix+1)
sigKIRC = logKIRC[order(kircttest$pvalue)[1:50] , ]
library(pheatmap)
pheatmap(sigKIRC, scale = "row", cluster_cols = F, border_color = NA, main = "Sig Expressions", cellwidth = 3, cellheight = 3,
color = colorRampPalette(c("darkblue", "white", "red2"))(256))
FC = vector()
for(i in 1:30) {
mean_t[i]=  rowMeans(kirc[i, 1:50])
mean_c[i] = rowMeans(kirc[i, 1:50])
}
logKIRC = log2(kircmatrix+1)
sigKIRC = logKIRC[order(kircttest$pvalue)[1:50] , ]
library(pheatmap)
pheatmap(sigKIRC, scale = "row", cluster_cols = F, border_color = NA, main = "Sig Expressions", cellwidth = 3, cellheight = 3,
color = colorRampPalette(c("darkblue", "white", "red2"))(256))
sig_subset <- sig_50[2:30, "pvalue"]
kircmatrix = as.matrix(kirc)
kircttest = data.frame()
for(i in 1:nrow(kirc)) {
kircTumor = kircmatrix[i, tumor_cols]
kircControl = kircmatrix[i, control_cols]
kircTumorMean = mean(kircTumor)
kircTumorSD = sd(kircTumor)
kircControlMean = mean(kircControl)
kircControlSD = sd(kircControl)
pvalue = t.test(kircTumor, kircControl)$p.value
kircttest[i, "Tumor Mean"] = kircTumorMean
kircttest[i, "Control Mean"] = kircControlMean
kircttest[i, "Tumor SD"] = kircTumorSD
kircttest[i, "Control SD"] = kircControlSD
kircttest[i, "T-Test"] = t.test(kircTumor, kircControl)
kircttest[i, "pvalue"] = pvalue
}
rownames(kircttest) = rownames(kircmatrix)
kircttest
